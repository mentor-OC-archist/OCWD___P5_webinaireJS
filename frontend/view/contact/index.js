/**
 * Gère l'affichage et les interactions de la page de contact
 */

// 1°) CRÉER UN EXPRESSION RÉGULIÈRE (regex) POUR TESTER QU'UNE CHAÎNE DE CARACTÈRE CONTIENT AU MOINS 10 CARACTÈRES
// 2°) AJOUTER UN ÉVÈNEMENT "submit" SUR LE FORMULAIRE, ET ASSOCIÉ LUI UNE FONCTION 
// QUI ENÈVE LE COMPORTEMENT PAR DÉFAUT DE L'ÉVÈNEMENT "submit"
// ET QUI DÉFINI UNE VARIABLE BOOLÉENNE À "true" (let maVariableBoleenne = true)
// 3°) DANS LA FONCTION DE L'ÉVÈNEMENT, TESTER QUE LA VALEUR DE LA BALISE <textarea/> CONTIENT AU MOINS 10 CARACTÈRE
// SI LA REGEX NE MATCH PAS, C'EST QUE L'UTILISATEUR N'A PAS ENTRÉ ASSEZ DE CARACTÈRE
// ET METTRE LE BOOLÉEN A "false" (maVariableBoleenne = false)
// 4°) UTILISER input.validity POUR SAVOIR SI L'INPUT EMAIL EST MAL REMPLI PAR L'UTILISATEUR, 
// EN GROS, VOUS POUVEZ FAIRE maVariableBoleenne = input.validity.valid
// ET SI maVariableBoleenne VAUT "false", UTILISER input.setCustomValidity("message") POUR PERSONNALISER LE MESSAGE D'ERREUR LORSQUE LE FORMULAIRE EST SUBMITÉ
// 5°) VÉRIFIER LA VALEUR DU BOOLÉEN, SI ELLE VAUT "true" LANCER "form.submit()"
// 6°) MODIFIER LE CSS POUR RAJOUTER APRÈS LA LIGNE:60 DES RÈGLES SUR LES INPUTS AVEC DES PSEUDO-FORMAT selector:valid{} ET selector:invalid{} AFIN DE MODIFIER LE BACKGROUND LORSQUE L'INPUT REMPLI PAR LE USER EST VALIDE OU INVALIDE.





